{
	"name": "Functional programming",
    "id": "fp",
    "children": [
        {
            "id": "fp01",
            "name": "Ex. 1 (example)",
            "guide": "./c01.md",
            "py": "./c01.py",
			"isExample": "True"
        },
        {
            "id": "fp02",
            "name": "Ex. 2 (task)",
            "guide": "c02.md",
            "py": "c02.py",
            "tests": [
                {"in": ["1"], "out": ".*int"},
                {"in": ["2"], "out": ".*print"},
                {"in": ["3"], "out": ".*len"}
            ]
        },
        {
            "id": "fp03",
            "name": "Ex. 3 (example)",
            "guide": "./c03.md",
            "py": "c03.py",
            "isExample": true
        },
        {
            "id": "fp04",
            "name": "Ex. 4 (task)",
            "guide": "c04.md",
            "py": "c04.py",
            "tests": [
                {
                    "in": [],
                    "out": [
                        {
                            "typ": "+",
                            "pattern": "drop_two can be expressed as drop_first ∘ drop_first"
                        },
                        {
                            "typ": "+",
                            "pattern": "drop_last can be expressed as reverse ∘ drop_first ∘ reverse"
                        },
                        {
                            "typ": "+",
                            "pattern": "del_first_word can be expressed as concat ∘ drop_first ∘ drop_first ∘ partition"
                        },
                        {
                            "typ": "c+",
                            "pattern": "return(\\w+\\(){6}\\w+\\){6}",
                            "ignore": "w"
                        },
                        {
                            "typ": "s+",
                            "statement": "delete_last_word('Once, upon a midnight dreary')",
                            "pattern": "^Once, upon a midnight$"
                        },
                        {
                            "typ": "s+",
                            "statement": "delete_last_word('To be or not to be, that is the question')",
                            "pattern": "^To be or not to be, that is the$"
                        },
                        {
                            "typ": "s+",
                            "statement": "delete_last_word('Supercalifragilisticexpialidocious')",
                            "pattern": "^$"
                        }
                    ]
                }
            ]
        },
        {
            "id": "fp05",
            "name": "Ex. 5 (task)",
            "guide": "c05.md",
            "py": "c05.py",
            "tests": [
                {
                    "in": [],
                    "out": [
                        {
                            "typ": "+",
                            "pattern": "262"
                        },
                        {
                            "typ": "+",
                            "pattern": "When Shall We Three Meet Again",
                            "count": 2
                        }
                    ]
                }
            ]
        }
    ]
}
